#,Stack,Input,Action
1,0,"const inteiro id = num_int ; const real id = num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s4
2,0 4,"inteiro id = num_int ; const real id = num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s10
3,0 4 10,"id = num_int ; const real id = num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r26 (<tipo_pre_def> → inteiro)
4,0 4 9,"id = num_int ; const real id = num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s29
5,0 4 9 29,"= num_int ; const real id = num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s62
6,0 4 9 29 62,"num_int ; const real id = num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s47
7,0 4 9 29 62 47,"; const real id = num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r79 (<constante_explicita> → num_int)
8,0 4 9 29 62 110,"; const real id = num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r21 (<constante> → <constante_explicita>)
9,0 4 9 29 62 108,"; const real id = num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s137
10,0 4 9 29 62 108 137,"const real id = num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s4
11,0 4 9 29 62 108 137 4,"real id = num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s11
12,0 4 9 29 62 108 137 4 11,"id = num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r27 (<tipo_pre_def> → real)
13,0 4 9 29 62 108 137 4 9,"id = num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s29
14,0 4 9 29 62 108 137 4 9 29,"= num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s62
15,0 4 9 29 62 108 137 4 9 29 62,"num_real ; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s48
16,0 4 9 29 62 108 137 4 9 29 62 48,"; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r80 (<constante_explicita> → num_real)
17,0 4 9 29 62 108 137 4 9 29 62 110,"; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r21 (<constante> → <constante_explicita>)
18,0 4 9 29 62 108 137 4 9 29 62 108,"; const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s137
19,0 4 9 29 62 108 137 4 9 29 62 108 137,"const booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s4
20,0 4 9 29 62 108 137 4 9 29 62 108 137 4,"booleano id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s12
21,0 4 9 29 62 108 137 4 9 29 62 108 137 4 12,"id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r28 (<tipo_pre_def> → booleano)
22,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9,"id = verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s29
23,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29,"= verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s62
24,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62,"verdadeiro ; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s50
25,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 50,"; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r82 (<constante_explicita> → verdadeiro)
26,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 110,"; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r21 (<constante> → <constante_explicita>)
27,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108,"; const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s137
28,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137,"const caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s4
29,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137 4,"caracter id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s13
30,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137 4 13,"id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r29 (<tipo_pre_def> → caracter)
31,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137 4 9,"id = literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s29
32,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29,"= literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s62
33,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62,"literal ; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s51
34,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 51,"; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r83 (<constante_explicita> → literal)
35,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 110,"; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r21 (<constante> → <constante_explicita>)
36,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108,"; var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s137
37,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137,"var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r4 (<dcl_const> → )
38,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137 157,"var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r3 (<dcl_const> → const <tipo_pre_def> id = <constante> ; <dcl_const>)
39,0 4 9 29 62 108 137 4 9 29 62 108 137 4 9 29 62 108 137 157,"var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r3 (<dcl_const> → const <tipo_pre_def> id = <constante> ; <dcl_const>)
40,0 4 9 29 62 108 137 4 9 29 62 108 137 157,"var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r3 (<dcl_const> → const <tipo_pre_def> id = <constante> ; <dcl_const>)
41,0 4 9 29 62 108 137 157,"var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r3 (<dcl_const> → const <tipo_pre_def> id = <constante> ; <dcl_const>)
42,0 3,"var id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s8
43,0 3 8,"id , id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s28
44,0 3 8 28,", id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s61
45,0 3 8 28 61,"id , id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s107
46,0 3 8 28 61 107,", id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s61
47,0 3 8 28 61 107 61,"id : inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s107
48,0 3 8 28 61 107 61 107,": inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r19 (<rep_id> → )
49,0 3 8 28 61 107 61 107 136,": inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $","r18 (<rep_id> → , id <rep_id>)"
50,0 3 8 28 61 107 136,": inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $","r18 (<rep_id> → , id <rep_id>)"
51,0 3 8 28 60,": inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r17 (<lid> → id <rep_id>)
52,0 3 8 27,": inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s59
53,0 3 8 27 59,"inteiro ; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s10
54,0 3 8 27 59 10,"; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r26 (<tipo_pre_def> → inteiro)
55,0 3 8 27 59 103,"; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r22 (<tipo> → <tipo_pre_def>)
56,0 3 8 27 59 102,"; var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s132
57,0 3 8 27 59 102 132,"var id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s8
58,0 3 8 27 59 102 132 8,"id : cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s28
59,0 3 8 27 59 102 132 8 28,": cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r19 (<rep_id> → )
60,0 3 8 27 59 102 132 8 28 60,": cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r17 (<lid> → id <rep_id>)
61,0 3 8 27 59 102 132 8 27,": cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s59
62,0 3 8 27 59 102 132 8 27 59,"cadeia [ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s105
63,0 3 8 27 59 102 132 8 27 59 105,"[ num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s134
64,0 3 8 27 59 102 132 8 27 59 105 134,"num_int ] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s47
65,0 3 8 27 59 102 132 8 27 59 105 134 47,"] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r79 (<constante_explicita> → num_int)
66,0 3 8 27 59 102 132 8 27 59 105 134 110,"] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r21 (<constante> → <constante_explicita>)
67,0 3 8 27 59 102 132 8 27 59 105 134 155,"] ; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s167
68,0 3 8 27 59 102 132 8 27 59 105 134 155 167,"; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r24 (<tipo> → cadeia [ <constante> ])
69,0 3 8 27 59 102 132 8 27 59 102,"; var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s132
70,0 3 8 27 59 102 132 8 27 59 102 132,"var id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s8
71,0 3 8 27 59 102 132 8 27 59 102 132 8,"id : vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s28
72,0 3 8 27 59 102 132 8 27 59 102 132 8 28,": vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r19 (<rep_id> → )
73,0 3 8 27 59 102 132 8 27 59 102 132 8 28 60,": vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r17 (<lid> → id <rep_id>)
74,0 3 8 27 59 102 132 8 27 59 102 132 8 27,": vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s59
75,0 3 8 27 59 102 132 8 27 59 102 132 8 27 59,"vetor [ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s106
76,0 3 8 27 59 102 132 8 27 59 102 132 8 27 59 106,"[ num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s135
77,0 3 8 27 59 102 132 8 27 59 102 132 8 27 59 106 135,"num_int ] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s47
78,0 3 8 27 59 102 132 8 27 59 102 132 8 27 59 106 135 47,"] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r79 (<constante_explicita> → num_int)
79,0 3 8 27 59 102 132 8 27 59 102 132 8 27 59 106 135 110,"] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r21 (<constante> → <constante_explicita>)
80,0 3 8 27 59 102 132 8 27 59 102 132 8 27 59 106 135 156,"] de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s168
81,0 3 8 27 59 102 132 8 27 59 102 132 8 27 59 106 135 156 168,"de real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s172
82,0 3 8 27 59 102 132 8 27 59 102 132 8 27 59 106 135 156 168 172,"real ; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s11
83,0 3 8 27 59 102 132 8 27 59 102 132 8 27 59 106 135 156 168 172 11,"; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r27 (<tipo_pre_def> → real)
84,0 3 8 27 59 102 132 8 27 59 102 132 8 27 59 106 135 156 168 172 177,"; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r25 (<tipo> → vetor [ <constante> ] de <tipo_pre_def>)
85,0 3 8 27 59 102 132 8 27 59 102 132 8 27 59 102,"; proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s132
86,0 3 8 27 59 102 132 8 27 59 102 132 8 27 59 102 132,"proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r6 (<dcl_var> → )
87,0 3 8 27 59 102 132 8 27 59 102 132 8 27 59 102 132 153,"proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r5 (<dcl_var> → var <lid> : <tipo> ; <dcl_var>)
88,0 3 8 27 59 102 132 8 27 59 102 132 153,"proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r5 (<dcl_var> → var <lid> : <tipo> ; <dcl_var>)
89,0 3 8 27 59 102 132 153,"proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r5 (<dcl_var> → var <lid> : <tipo> ; <dcl_var>)
90,0 3 7,"proc id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s25
91,0 3 7 25,"id ( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s57
92,0 3 7 25 57,"( val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s100
93,0 3 7 25 57 100,"val id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s130
94,0 3 7 25 57 100 130,"id , id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s28
95,0 3 7 25 57 100 130 28,", id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s61
96,0 3 7 25 57 100 130 28 61,"id : inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s107
97,0 3 7 25 57 100 130 28 61 107,": inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r19 (<rep_id> → )
98,0 3 7 25 57 100 130 28 61 107 136,": inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $","r18 (<rep_id> → , id <rep_id>)"
99,0 3 7 25 57 100 130 28 60,": inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r17 (<lid> → id <rep_id>)
100,0 3 7 25 57 100 130 151,": inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s164
101,0 3 7 25 57 100 130 151 164,"inteiro ) ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s10
102,0 3 7 25 57 100 130 151 164 10,") ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r26 (<tipo_pre_def> → inteiro)
103,0 3 7 25 57 100 130 151 164 170,") ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r16 (<rep_listapar> → )
104,0 3 7 25 57 100 130 151 164 170 175,") ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r14 (<listapar> → val <lid> : <tipo_pre_def> <rep_listapar>)
105,0 3 7 25 57 100 128,") ; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s149
106,0 3 7 25 57 100 128 149,"; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r11 (<parametros> → ( <listapar> ))
107,0 3 7 25 57 99,"; var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s127
108,0 3 7 25 57 99 127,"var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r4 (<dcl_const> → )
109,0 3 7 25 57 99 127 3,"var id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s8
110,0 3 7 25 57 99 127 3 8,"id : inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s28
111,0 3 7 25 57 99 127 3 8 28,": inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r19 (<rep_id> → )
112,0 3 7 25 57 99 127 3 8 28 60,": inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r17 (<lid> → id <rep_id>)
113,0 3 7 25 57 99 127 3 8 27,": inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s59
114,0 3 7 25 57 99 127 3 8 27 59,"inteiro ; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s10
115,0 3 7 25 57 99 127 3 8 27 59 10,"; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r26 (<tipo_pre_def> → inteiro)
116,0 3 7 25 57 99 127 3 8 27 59 103,"; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r22 (<tipo> → <tipo_pre_def>)
117,0 3 7 25 57 99 127 3 8 27 59 102,"; inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s132
118,0 3 7 25 57 99 127 3 8 27 59 102 132,"inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r6 (<dcl_var> → )
119,0 3 7 25 57 99 127 3 8 27 59 102 132 153,"inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r5 (<dcl_var> → var <lid> : <tipo> ; <dcl_var>)
120,0 3 7 25 57 99 127 3 7,"inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r8 (<dcl_procs> → )
121,0 3 7 25 57 99 127 3 7 23,"inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r2 (<declaracoes> → <dcl_const> <dcl_var> <dcl_procs>)
122,0 3 7 25 57 99 127 148,"inicio id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s6
123,0 3 7 25 57 99 127 148 6,"id := id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s16
124,0 3 7 25 57 99 127 148 6 16,":= id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s33
125,0 3 7 25 57 99 127 148 6 16 33,"id + id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
126,0 3 7 25 57 99 127 148 6 16 33 46,"+ id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r78 (<rvar> → )
127,0 3 7 25 57 99 127 148 6 16 33 46 91,"+ id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
128,0 3 7 25 57 99 127 148 6 16 33 44,"+ id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
129,0 3 7 25 57 99 127 148 6 16 33 40,"+ id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
130,0 3 7 25 57 99 127 148 6 16 33 40 83,"+ id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
131,0 3 7 25 57 99 127 148 6 16 33 39,"+ id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s80
132,0 3 7 25 57 99 127 148 6 16 33 39 80,"id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r61 (<op_add> → +)
133,0 3 7 25 57 99 127 148 6 16 33 39 79,"id ; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
134,0 3 7 25 57 99 127 148 6 16 33 39 79 46,"; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r78 (<rvar> → )
135,0 3 7 25 57 99 127 148 6 16 33 39 79 46 91,"; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
136,0 3 7 25 57 99 127 148 6 16 33 39 79 44,"; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
137,0 3 7 25 57 99 127 148 6 16 33 39 79 40,"; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
138,0 3 7 25 57 99 127 148 6 16 33 39 79 40 83,"; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
139,0 3 7 25 57 99 127 148 6 16 33 39 79 118,"; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
140,0 3 7 25 57 99 127 148 6 16 33 39 79 118 143,"; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r59 (<rep_expsimp> → <op_add> <termo> <rep_expsimp>)
141,0 3 7 25 57 99 127 148 6 16 33 39 78,"; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
142,0 3 7 25 57 99 127 148 6 16 33 38,"; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r51 (<resto_expressao> → )
143,0 3 7 25 57 99 127 148 6 16 33 38 70,"; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
144,0 3 7 25 57 99 127 148 6 16 33 65,"; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r43 (<rcomid> → := <expressao>)
145,0 3 7 25 57 99 127 148 6 16 32,"; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r33 (<comando> → id <rcomid>)
146,0 3 7 25 57 99 127 148 6 15,"; escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s31
147,0 3 7 25 57 99 127 148 6 15 31,"escreva ( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s22
148,0 3 7 25 57 99 127 148 6 15 31 22,"( id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s55
149,0 3 7 25 57 99 127 148 6 15 31 22 55,"id ) fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
150,0 3 7 25 57 99 127 148 6 15 31 22 55 46,") fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r78 (<rvar> → )
151,0 3 7 25 57 99 127 148 6 15 31 22 55 46 91,") fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
152,0 3 7 25 57 99 127 148 6 15 31 22 55 44,") fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
153,0 3 7 25 57 99 127 148 6 15 31 22 55 40,") fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
154,0 3 7 25 57 99 127 148 6 15 31 22 55 40 83,") fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
155,0 3 7 25 57 99 127 148 6 15 31 22 55 39,") fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
156,0 3 7 25 57 99 127 148 6 15 31 22 55 39 78,") fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
157,0 3 7 25 57 99 127 148 6 15 31 22 55 38,") fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r51 (<resto_expressao> → )
158,0 3 7 25 57 99 127 148 6 15 31 22 55 38 70,") fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
159,0 3 7 25 57 99 127 148 6 15 31 22 55 97,") fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r48 (<rep_expressao> → )
160,0 3 7 25 57 99 127 148 6 15 31 22 55 97 126,") fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s147
161,0 3 7 25 57 99 127 148 6 15 31 22 55 97 126 147,"fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r39 (<comando> → escreva ( <expressao> <rep_expressao> ))
162,0 3 7 25 57 99 127 148 6 15 31 64,"fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r32 (<rep_comando> → )
163,0 3 7 25 57 99 127 148 6 15 31 64 111,"fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r31 (<rep_comando> → ; <comando> <rep_comando>)
164,0 3 7 25 57 99 127 148 6 15 30,"fim ; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s63
165,0 3 7 25 57 99 127 148 6 15 30 63,"; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r30 (<comandos> → inicio <comando> <rep_comando> fim)
166,0 3 7 25 57 99 127 148 162,"; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r9 (<dcl_proc> → proc id <parametros> ; <declaracoes> <comandos>)
167,0 3 7 24,"; funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s56
168,0 3 7 24 56,"funcao id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s26
169,0 3 7 24 56 26,"id ( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s58
170,0 3 7 24 56 26 58,"( val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s100
171,0 3 7 24 56 26 58 100,"val id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s130
172,0 3 7 24 56 26 58 100 130,"id , id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s28
173,0 3 7 24 56 26 58 100 130 28,", id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s61
174,0 3 7 24 56 26 58 100 130 28 61,"id : inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s107
175,0 3 7 24 56 26 58 100 130 28 61 107,": inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r19 (<rep_id> → )
176,0 3 7 24 56 26 58 100 130 28 61 107 136,": inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $","r18 (<rep_id> → , id <rep_id>)"
177,0 3 7 24 56 26 58 100 130 28 60,": inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r17 (<lid> → id <rep_id>)
178,0 3 7 24 56 26 58 100 130 151,": inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s164
179,0 3 7 24 56 26 58 100 130 151 164,"inteiro ) : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s10
180,0 3 7 24 56 26 58 100 130 151 164 10,") : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r26 (<tipo_pre_def> → inteiro)
181,0 3 7 24 56 26 58 100 130 151 164 170,") : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r16 (<rep_listapar> → )
182,0 3 7 24 56 26 58 100 130 151 164 170 175,") : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r14 (<listapar> → val <lid> : <tipo_pre_def> <rep_listapar>)
183,0 3 7 24 56 26 58 100 128,") : inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s149
184,0 3 7 24 56 26 58 100 128 149,": inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r11 (<parametros> → ( <listapar> ))
185,0 3 7 24 56 26 58 101,": inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s131
186,0 3 7 24 56 26 58 101 131,"inteiro ; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s10
187,0 3 7 24 56 26 58 101 131 10,"; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r26 (<tipo_pre_def> → inteiro)
188,0 3 7 24 56 26 58 101 131 152,"; var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s165
189,0 3 7 24 56 26 58 101 131 152 165,"var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r4 (<dcl_const> → )
190,0 3 7 24 56 26 58 101 131 152 165 3,"var id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s8
191,0 3 7 24 56 26 58 101 131 152 165 3 8,"id : inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s28
192,0 3 7 24 56 26 58 101 131 152 165 3 8 28,": inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r19 (<rep_id> → )
193,0 3 7 24 56 26 58 101 131 152 165 3 8 28 60,": inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r17 (<lid> → id <rep_id>)
194,0 3 7 24 56 26 58 101 131 152 165 3 8 27,": inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s59
195,0 3 7 24 56 26 58 101 131 152 165 3 8 27 59,"inteiro ; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s10
196,0 3 7 24 56 26 58 101 131 152 165 3 8 27 59 10,"; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r26 (<tipo_pre_def> → inteiro)
197,0 3 7 24 56 26 58 101 131 152 165 3 8 27 59 103,"; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r22 (<tipo> → <tipo_pre_def>)
198,0 3 7 24 56 26 58 101 131 152 165 3 8 27 59 102,"; inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s132
199,0 3 7 24 56 26 58 101 131 152 165 3 8 27 59 102 132,"inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r6 (<dcl_var> → )
200,0 3 7 24 56 26 58 101 131 152 165 3 8 27 59 102 132 153,"inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r5 (<dcl_var> → var <lid> : <tipo> ; <dcl_var>)
201,0 3 7 24 56 26 58 101 131 152 165 3 7,"inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r8 (<dcl_procs> → )
202,0 3 7 24 56 26 58 101 131 152 165 3 7 23,"inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r2 (<declaracoes> → <dcl_const> <dcl_var> <dcl_procs>)
203,0 3 7 24 56 26 58 101 131 152 165 171,"inicio se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s6
204,0 3 7 24 56 26 58 101 131 152 165 171 6,"se id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s18
205,0 3 7 24 56 26 58 101 131 152 165 171 6 18,"id > id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
206,0 3 7 24 56 26 58 101 131 152 165 171 6 18 46,"> id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r78 (<rvar> → )
207,0 3 7 24 56 26 58 101 131 152 165 171 6 18 46 91,"> id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
208,0 3 7 24 56 26 58 101 131 152 165 171 6 18 44,"> id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
209,0 3 7 24 56 26 58 101 131 152 165 171 6 18 40,"> id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
210,0 3 7 24 56 26 58 101 131 152 165 171 6 18 40 83,"> id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
211,0 3 7 24 56 26 58 101 131 152 165 171 6 18 39,"> id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
212,0 3 7 24 56 26 58 101 131 152 165 171 6 18 39 78,"> id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
213,0 3 7 24 56 26 58 101 131 152 165 171 6 18 38,"> id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s74
214,0 3 7 24 56 26 58 101 131 152 165 171 6 18 38 74,"id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r54 (<oprel> → >)
215,0 3 7 24 56 26 58 101 131 152 165 171 6 18 38 71,"id entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
216,0 3 7 24 56 26 58 101 131 152 165 171 6 18 38 71 46,"entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r78 (<rvar> → )
217,0 3 7 24 56 26 58 101 131 152 165 171 6 18 38 71 46 91,"entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
218,0 3 7 24 56 26 58 101 131 152 165 171 6 18 38 71 44,"entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
219,0 3 7 24 56 26 58 101 131 152 165 171 6 18 38 71 40,"entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
220,0 3 7 24 56 26 58 101 131 152 165 171 6 18 38 71 40 83,"entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
221,0 3 7 24 56 26 58 101 131 152 165 171 6 18 38 71 39,"entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
222,0 3 7 24 56 26 58 101 131 152 165 171 6 18 38 71 39 78,"entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
223,0 3 7 24 56 26 58 101 131 152 165 171 6 18 38 71 117,"entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r50 (<resto_expressao> → <oprel> <expsimp>)
224,0 3 7 24 56 26 58 101 131 152 165 171 6 18 38 70,"entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
225,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37,"entao id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s69
226,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69,"id := id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s16
227,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 16,":= id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s33
228,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 16 33,"id senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
229,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 16 33 46,"senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r78 (<rvar> → )
230,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 16 33 46 91,"senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
231,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 16 33 44,"senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
232,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 16 33 40,"senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
233,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 16 33 40 83,"senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
234,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 16 33 39,"senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
235,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 16 33 39 78,"senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
236,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 16 33 38,"senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r51 (<resto_expressao> → )
237,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 16 33 38 70,"senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
238,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 16 33 65,"senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r43 (<rcomid> → := <expressao>)
239,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 16 32,"senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r33 (<comando> → id <rcomid>)
240,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116,"senao id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s142
241,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142,"id := id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s16
242,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 16,":= id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s33
243,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 16 33,"id ; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
244,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 16 33 46,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r78 (<rvar> → )
245,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 16 33 46 91,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
246,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 16 33 44,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
247,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 16 33 40,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
248,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 16 33 40 83,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
249,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 16 33 39,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
250,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 16 33 39 78,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
251,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 16 33 38,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r51 (<resto_expressao> → )
252,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 16 33 38 70,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
253,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 16 33 65,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r43 (<rcomid> → := <expressao>)
254,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 16 32,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r33 (<comando> → id <rcomid>)
255,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 142 160,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r41 (<senaoparte> → senao <comando>)
256,0 3 7 24 56 26 58 101 131 152 165 171 6 18 37 69 116 141,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r35 (<comando> → se <expressao> entao <comando> <senaoparte>)
257,0 3 7 24 56 26 58 101 131 152 165 171 6 15,"; id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s31
258,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31,"id ( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s16
259,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16,"( id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s35
260,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 35,"id ) fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
261,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 35 46,") fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r78 (<rvar> → )
262,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 35 46 91,") fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
263,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 35 44,") fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
264,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 35 40,") fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
265,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 35 40 83,") fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
266,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 35 39,") fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
267,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 35 39 78,") fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
268,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 35 38,") fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r51 (<resto_expressao> → )
269,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 35 38 70,") fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
270,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 35 67,") fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r48 (<rep_expressao> → )
271,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 35 67 113,") fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s139
272,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 35 67 113 139,"fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r45 (<rcomid> → ( <expressao> <rep_expressao> ))
273,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 16 32,"fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r33 (<comando> → id <rcomid>)
274,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 64,"fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r32 (<rep_comando> → )
275,0 3 7 24 56 26 58 101 131 152 165 171 6 15 31 64 111,"fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r31 (<rep_comando> → ; <comando> <rep_comando>)
276,0 3 7 24 56 26 58 101 131 152 165 171 6 15 30,"fim ; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s63
277,0 3 7 24 56 26 58 101 131 152 165 171 6 15 30 63,"; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r30 (<comandos> → inicio <comando> <rep_comando> fim)
278,0 3 7 24 56 26 58 101 131 152 165 171 176,"; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r10 (<dcl_proc> → funcao id <parametros> : <tipo_pre_def> ; <declaracoes> <comandos>)
279,0 3 7 24 56 24,"; inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s56
280,0 3 7 24 56 24 56,"inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r8 (<dcl_procs> → )
281,0 3 7 24 56 24 56 98,"inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r7 (<dcl_procs> → <dcl_proc> ; <dcl_procs>)
282,0 3 7 24 56 98,"inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r7 (<dcl_procs> → <dcl_proc> ; <dcl_procs>)
283,0 3 7 23,"inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r2 (<declaracoes> → <dcl_const> <dcl_var> <dcl_procs>)
284,0 2,"inicio id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s6
285,0 2 6,"id := num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s16
286,0 2 6 16,":= num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s33
287,0 2 6 16 33,"num_int ; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s47
288,0 2 6 16 33 47,"; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r79 (<constante_explicita> → num_int)
289,0 2 6 16 33 45,"; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r74 (<fator> → <constante_explicita>)
290,0 2 6 16 33 40,"; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
291,0 2 6 16 33 40 83,"; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
292,0 2 6 16 33 39,"; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
293,0 2 6 16 33 39 78,"; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
294,0 2 6 16 33 38,"; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r51 (<resto_expressao> → )
295,0 2 6 16 33 38 70,"; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
296,0 2 6 16 33 65,"; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r43 (<rcomid> → := <expressao>)
297,0 2 6 16 32,"; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r33 (<comando> → id <rcomid>)
298,0 2 6 15,"; id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s31
299,0 2 6 15 31,"id := num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s16
300,0 2 6 15 31 16,":= num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s33
301,0 2 6 15 31 16 33,"num_int ; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s47
302,0 2 6 15 31 16 33 47,"; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r79 (<constante_explicita> → num_int)
303,0 2 6 15 31 16 33 45,"; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r74 (<fator> → <constante_explicita>)
304,0 2 6 15 31 16 33 40,"; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
305,0 2 6 15 31 16 33 40 83,"; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
306,0 2 6 15 31 16 33 39,"; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
307,0 2 6 15 31 16 33 39 78,"; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
308,0 2 6 15 31 16 33 38,"; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r51 (<resto_expressao> → )
309,0 2 6 15 31 16 33 38 70,"; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
310,0 2 6 15 31 16 33 65,"; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r43 (<rcomid> → := <expressao>)
311,0 2 6 15 31 16 32,"; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r33 (<comando> → id <rcomid>)
312,0 2 6 15 31 64,"; id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s31
313,0 2 6 15 31 64 31,"id := id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s16
314,0 2 6 15 31 64 31 16,":= id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s33
315,0 2 6 15 31 64 31 16 33,"id ( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
316,0 2 6 15 31 64 31 16 33 46,"( id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s92
317,0 2 6 15 31 64 31 16 33 46 92,"id , id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
318,0 2 6 15 31 64 31 16 33 46 92 46,", id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r78 (<rvar> → )
319,0 2 6 15 31 64 31 16 33 46 92 46 91,", id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
320,0 2 6 15 31 64 31 16 33 46 92 44,", id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
321,0 2 6 15 31 64 31 16 33 46 92 40,", id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
322,0 2 6 15 31 64 31 16 33 46 92 40 83,", id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
323,0 2 6 15 31 64 31 16 33 46 92 39,", id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
324,0 2 6 15 31 64 31 16 33 46 92 39 78,", id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
325,0 2 6 15 31 64 31 16 33 46 92 38,", id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r51 (<resto_expressao> → )
326,0 2 6 15 31 64 31 16 33 46 92 38 70,", id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
327,0 2 6 15 31 64 31 16 33 46 92 121,", id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s114
328,0 2 6 15 31 64 31 16 33 46 92 121 114,"id ) ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
329,0 2 6 15 31 64 31 16 33 46 92 121 114 46,") ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r78 (<rvar> → )
330,0 2 6 15 31 64 31 16 33 46 92 121 114 46 91,") ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
331,0 2 6 15 31 64 31 16 33 46 92 121 114 44,") ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
332,0 2 6 15 31 64 31 16 33 46 92 121 114 40,") ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
333,0 2 6 15 31 64 31 16 33 46 92 121 114 40 83,") ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
334,0 2 6 15 31 64 31 16 33 46 92 121 114 39,") ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
335,0 2 6 15 31 64 31 16 33 46 92 121 114 39 78,") ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
336,0 2 6 15 31 64 31 16 33 46 92 121 114 38,") ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r51 (<resto_expressao> → )
337,0 2 6 15 31 64 31 16 33 46 92 121 114 38 70,") ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
338,0 2 6 15 31 64 31 16 33 46 92 121 114 140,") ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r48 (<rep_expressao> → )
339,0 2 6 15 31 64 31 16 33 46 92 121 114 140 159,") ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $","r47 (<rep_expressao> → , <expressao> <rep_expressao>)"
340,0 2 6 15 31 64 31 16 33 46 92 121 145,") ; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s161
341,0 2 6 15 31 64 31 16 33 46 92 121 145 161,"; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r76 (<rvar> → ( <expressao> <rep_expressao> ))
342,0 2 6 15 31 64 31 16 33 46 91,"; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
343,0 2 6 15 31 64 31 16 33 44,"; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
344,0 2 6 15 31 64 31 16 33 40,"; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
345,0 2 6 15 31 64 31 16 33 40 83,"; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
346,0 2 6 15 31 64 31 16 33 39,"; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
347,0 2 6 15 31 64 31 16 33 39 78,"; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
348,0 2 6 15 31 64 31 16 33 38,"; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r51 (<resto_expressao> → )
349,0 2 6 15 31 64 31 16 33 38 70,"; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
350,0 2 6 15 31 64 31 16 33 65,"; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r43 (<rcomid> → := <expressao>)
351,0 2 6 15 31 64 31 16 32,"; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r33 (<comando> → id <rcomid>)
352,0 2 6 15 31 64 31 64,"; enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s31
353,0 2 6 15 31 64 31 64 31,"enquanto id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s19
354,0 2 6 15 31 64 31 64 31 19,"id > num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
355,0 2 6 15 31 64 31 64 31 19 46,"> num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r78 (<rvar> → )
356,0 2 6 15 31 64 31 64 31 19 46 91,"> num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
357,0 2 6 15 31 64 31 64 31 19 44,"> num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
358,0 2 6 15 31 64 31 64 31 19 40,"> num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
359,0 2 6 15 31 64 31 64 31 19 40 83,"> num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
360,0 2 6 15 31 64 31 64 31 19 39,"> num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
361,0 2 6 15 31 64 31 64 31 19 39 78,"> num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
362,0 2 6 15 31 64 31 64 31 19 38,"> num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s74
363,0 2 6 15 31 64 31 64 31 19 38 74,"num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r54 (<oprel> → >)
364,0 2 6 15 31 64 31 64 31 19 38 71,"num_int faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s47
365,0 2 6 15 31 64 31 64 31 19 38 71 47,"faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r79 (<constante_explicita> → num_int)
366,0 2 6 15 31 64 31 64 31 19 38 71 45,"faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r74 (<fator> → <constante_explicita>)
367,0 2 6 15 31 64 31 64 31 19 38 71 40,"faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
368,0 2 6 15 31 64 31 64 31 19 38 71 40 83,"faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
369,0 2 6 15 31 64 31 64 31 19 38 71 39,"faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
370,0 2 6 15 31 64 31 64 31 19 38 71 39 78,"faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
371,0 2 6 15 31 64 31 64 31 19 38 71 117,"faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r50 (<resto_expressao> → <oprel> <expsimp>)
372,0 2 6 15 31 64 31 64 31 19 38 70,"faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
373,0 2 6 15 31 64 31 64 31 19 52,"faca inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s94
374,0 2 6 15 31 64 31 64 31 19 52 94,"inicio escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s17
375,0 2 6 15 31 64 31 64 31 19 52 94 17,"escreva ( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s22
376,0 2 6 15 31 64 31 64 31 19 52 94 17 22,"( id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s55
377,0 2 6 15 31 64 31 64 31 19 52 94 17 22 55,"id ) ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
378,0 2 6 15 31 64 31 64 31 19 52 94 17 22 55 46,") ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r78 (<rvar> → )
379,0 2 6 15 31 64 31 64 31 19 52 94 17 22 55 46 91,") ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
380,0 2 6 15 31 64 31 64 31 19 52 94 17 22 55 44,") ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
381,0 2 6 15 31 64 31 64 31 19 52 94 17 22 55 40,") ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
382,0 2 6 15 31 64 31 64 31 19 52 94 17 22 55 40 83,") ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
383,0 2 6 15 31 64 31 64 31 19 52 94 17 22 55 39,") ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
384,0 2 6 15 31 64 31 64 31 19 52 94 17 22 55 39 78,") ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
385,0 2 6 15 31 64 31 64 31 19 52 94 17 22 55 38,") ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r51 (<resto_expressao> → )
386,0 2 6 15 31 64 31 64 31 19 52 94 17 22 55 38 70,") ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
387,0 2 6 15 31 64 31 64 31 19 52 94 17 22 55 97,") ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r48 (<rep_expressao> → )
388,0 2 6 15 31 64 31 64 31 19 52 94 17 22 55 97 126,") ; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s147
389,0 2 6 15 31 64 31 64 31 19 52 94 17 22 55 97 126 147,"; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",r39 (<comando> → escreva ( <expressao> <rep_expressao> ))
390,0 2 6 15 31 64 31 64 31 19 52 94 17 36,"; id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s31
391,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31,"id := id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s16
392,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16,":= id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s33
393,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33,"id - num_int fim ; repita leia ( id , id ) ate id = id fim . $",s46
394,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 46,"- num_int fim ; repita leia ( id , id ) ate id = id fim . $",r78 (<rvar> → )
395,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 46 91,"- num_int fim ; repita leia ( id , id ) ate id = id fim . $",r75 (<variavel> → id <rvar>)
396,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 44,"- num_int fim ; repita leia ( id , id ) ate id = id fim . $",r73 (<fator> → <variavel>)
397,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 40,"- num_int fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
398,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 40 83,"- num_int fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
399,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 39,"- num_int fim ; repita leia ( id , id ) ate id = id fim . $",s81
400,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 39 81,"num_int fim ; repita leia ( id , id ) ate id = id fim . $",r62 (<op_add> → -)
401,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 39 79,"num_int fim ; repita leia ( id , id ) ate id = id fim . $",s47
402,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 39 79 47,"fim ; repita leia ( id , id ) ate id = id fim . $",r79 (<constante_explicita> → num_int)
403,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 39 79 45,"fim ; repita leia ( id , id ) ate id = id fim . $",r74 (<fator> → <constante_explicita>)
404,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 39 79 40,"fim ; repita leia ( id , id ) ate id = id fim . $",r66 (<rep_termo> → )
405,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 39 79 40 83,"fim ; repita leia ( id , id ) ate id = id fim . $",r64 (<termo> → <fator> <rep_termo>)
406,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 39 79 118,"fim ; repita leia ( id , id ) ate id = id fim . $",r60 (<rep_expsimp> → )
407,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 39 79 118 143,"fim ; repita leia ( id , id ) ate id = id fim . $",r59 (<rep_expsimp> → <op_add> <termo> <rep_expsimp>)
408,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 39 78,"fim ; repita leia ( id , id ) ate id = id fim . $",r58 (<expsimp> → <termo> <rep_expsimp>)
409,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 38,"fim ; repita leia ( id , id ) ate id = id fim . $",r51 (<resto_expressao> → )
410,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 38 70,"fim ; repita leia ( id , id ) ate id = id fim . $",r49 (<expressao> → <expsimp> <resto_expressao>)
411,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 33 65,"fim ; repita leia ( id , id ) ate id = id fim . $",r43 (<rcomid> → := <expressao>)
412,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 16 32,"fim ; repita leia ( id , id ) ate id = id fim . $",r33 (<comando> → id <rcomid>)
413,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 64,"fim ; repita leia ( id , id ) ate id = id fim . $",r32 (<rep_comando> → )
414,0 2 6 15 31 64 31 64 31 19 52 94 17 36 31 64 111,"fim ; repita leia ( id , id ) ate id = id fim . $",r31 (<rep_comando> → ; <comando> <rep_comando>)
415,0 2 6 15 31 64 31 64 31 19 52 94 17 36 68,"fim ; repita leia ( id , id ) ate id = id fim . $",s115
416,0 2 6 15 31 64 31 64 31 19 52 94 17 36 68 115,"; repita leia ( id , id ) ate id = id fim . $",r34 (<comando> → inicio <comando> <rep_comando> fim)
417,0 2 6 15 31 64 31 64 31 19 52 94 123,"; repita leia ( id , id ) ate id = id fim . $",r36 (<comando> → enquanto <expressao> faca <comando>)
418,0 2 6 15 31 64 31 64 31 64,"; repita leia ( id , id ) ate id = id fim . $",s31
419,0 2 6 15 31 64 31 64 31 64 31,"repita leia ( id , id ) ate id = id fim . $",s20
420,0 2 6 15 31 64 31 64 31 64 31 20,"leia ( id , id ) ate id = id fim . $",s21
421,0 2 6 15 31 64 31 64 31 64 31 20 21,"( id , id ) ate id = id fim . $",s54
422,0 2 6 15 31 64 31 64 31 64 31 20 21 54,"id , id ) ate id = id fim . $",s28
423,0 2 6 15 31 64 31 64 31 64 31 20 21 54 28,", id ) ate id = id fim . $",s61
424,0 2 6 15 31 64 31 64 31 64 31 20 21 54 28 61,id ) ate id = id fim . $,s107
425,0 2 6 15 31 64 31 64 31 64 31 20 21 54 28 61 107,) ate id = id fim . $,r19 (<rep_id> → )
426,0 2 6 15 31 64 31 64 31 64 31 20 21 54 28 61 107 136,) ate id = id fim . $,"r18 (<rep_id> → , id <rep_id>)"
427,0 2 6 15 31 64 31 64 31 64 31 20 21 54 28 60,) ate id = id fim . $,r17 (<lid> → id <rep_id>)
428,0 2 6 15 31 64 31 64 31 64 31 20 21 54 96,) ate id = id fim . $,s125
429,0 2 6 15 31 64 31 64 31 64 31 20 21 54 96 125,ate id = id fim . $,r38 (<comando> → leia ( <lid> ))
430,0 2 6 15 31 64 31 64 31 64 31 20 53,ate id = id fim . $,s95
431,0 2 6 15 31 64 31 64 31 64 31 20 53 95,id = id fim . $,s46
432,0 2 6 15 31 64 31 64 31 64 31 20 53 95 46,= id fim . $,r78 (<rvar> → )
433,0 2 6 15 31 64 31 64 31 64 31 20 53 95 46 91,= id fim . $,r75 (<variavel> → id <rvar>)
434,0 2 6 15 31 64 31 64 31 64 31 20 53 95 44,= id fim . $,r73 (<fator> → <variavel>)
435,0 2 6 15 31 64 31 64 31 64 31 20 53 95 40,= id fim . $,r66 (<rep_termo> → )
436,0 2 6 15 31 64 31 64 31 64 31 20 53 95 40 83,= id fim . $,r64 (<termo> → <fator> <rep_termo>)
437,0 2 6 15 31 64 31 64 31 64 31 20 53 95 39,= id fim . $,r60 (<rep_expsimp> → )
438,0 2 6 15 31 64 31 64 31 64 31 20 53 95 39 78,= id fim . $,r58 (<expsimp> → <termo> <rep_expsimp>)
439,0 2 6 15 31 64 31 64 31 64 31 20 53 95 38,= id fim . $,s72
440,0 2 6 15 31 64 31 64 31 64 31 20 53 95 38 72,id fim . $,r52 (<oprel> → =)
441,0 2 6 15 31 64 31 64 31 64 31 20 53 95 38 71,id fim . $,s46
442,0 2 6 15 31 64 31 64 31 64 31 20 53 95 38 71 46,fim . $,r78 (<rvar> → )
443,0 2 6 15 31 64 31 64 31 64 31 20 53 95 38 71 46 91,fim . $,r75 (<variavel> → id <rvar>)
444,0 2 6 15 31 64 31 64 31 64 31 20 53 95 38 71 44,fim . $,r73 (<fator> → <variavel>)
445,0 2 6 15 31 64 31 64 31 64 31 20 53 95 38 71 40,fim . $,r66 (<rep_termo> → )
446,0 2 6 15 31 64 31 64 31 64 31 20 53 95 38 71 40 83,fim . $,r64 (<termo> → <fator> <rep_termo>)
447,0 2 6 15 31 64 31 64 31 64 31 20 53 95 38 71 39,fim . $,r60 (<rep_expsimp> → )
448,0 2 6 15 31 64 31 64 31 64 31 20 53 95 38 71 39 78,fim . $,r58 (<expsimp> → <termo> <rep_expsimp>)
449,0 2 6 15 31 64 31 64 31 64 31 20 53 95 38 71 117,fim . $,r50 (<resto_expressao> → <oprel> <expsimp>)
450,0 2 6 15 31 64 31 64 31 64 31 20 53 95 38 70,fim . $,r49 (<expressao> → <expsimp> <resto_expressao>)
451,0 2 6 15 31 64 31 64 31 64 31 20 53 95 124,fim . $,r37 (<comando> → repita <comando> ate <expressao>)
452,0 2 6 15 31 64 31 64 31 64 31 64,fim . $,r32 (<rep_comando> → )
453,0 2 6 15 31 64 31 64 31 64 31 64 111,fim . $,r31 (<rep_comando> → ; <comando> <rep_comando>)
454,0 2 6 15 31 64 31 64 31 64 111,fim . $,r31 (<rep_comando> → ; <comando> <rep_comando>)
455,0 2 6 15 31 64 31 64 111,fim . $,r31 (<rep_comando> → ; <comando> <rep_comando>)
456,0 2 6 15 31 64 111,fim . $,r31 (<rep_comando> → ; <comando> <rep_comando>)
457,0 2 6 15 30,fim . $,s63
458,0 2 6 15 30 63,. $,r30 (<comandos> → inicio <comando> <rep_comando> fim)
459,0 2 5,. $,s14
460,0 2 5 14,$,r1 (<programa> → <declaracoes> <comandos> .)
461,0 1,$,accept
